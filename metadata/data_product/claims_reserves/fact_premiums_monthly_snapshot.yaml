target:
  lakehouse: den_lhw_dpr_001_data_product_tables
  schema: reserves
  table: fact_premiums_monthly_snapshot
  load_strategy: overwrite
  key_columns:
    - dl_row_hash
  unknown_record: False
  identity: False

source:
  - name: bop_premiums_summary
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: BOPPremiumsSummary

  - name: ca_premiums_summary
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: CAPremiumsSummary

  - name: db_premiums_summary
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: DBPremiumsSummary

  - name: ho_premiums_summary
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: HOPremiumsSummary

  - name: wc_premiums_summary
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: WCPremiumExposureSummary

  - name: dim_line_of_business
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: dim_line_of_business

  - name: dim_carrier
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: dim_carrier

  - name: dim_state
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: dim_state

  - name: dim_aslob
    lakehouse: den_lhw_dpr_001_data_product_tables
    schema: reserves
    table: dim_aslob

query:

  - name: BOPPremiumsSummary_DF
    sql: |
        SELECT DISTINCT
          aslob
          ,lob
          ,carrier
          ,state
          ,p.startdate
          ,p.asofdate
          ,p.calyrmo_end
          ,p.polyrmo_end
          ,p.resseg
          ,cast(p.earnedpremium as float) as earned_premiums
          ,cast(p.writtenpremium as float) as written_premiums
          ,case when p.earnedpremium > 0 then 1 else 0 end as dq_earned_premiums_check
          ,case 
                  when p.writtenpremium > 0 then 1
                  else 0
              end as dq_written_premiums_check
        FROM bop_premiums_summary p

  - name: CAPremiumsSummary_DF
    sql: |
        SELECT DISTINCT
            aslob
          ,lob
          ,carrier
          ,state
          ,p.startdate
          ,p.asofdate
          ,p.calyrmo_end
          ,p.polyrmo_end
          ,p.resseg
          ,cast(p.earnedpremium as float) as earned_premiums
          ,cast(p.writtenpremium as float) as written_premiums
          ,case when p.earnedpremium > 0 then 1 else 0 end as dq_earned_premiums_check
          ,case 
                  when p.writtenpremium > 0 then 1
                  else 0
              end as dq_written_premiums_check
          FROM ca_premiums_summary p

  - name: DBPremiumsSummary_DF
    sql: |
        SELECT DISTINCT
            aslob
          ,lob
          ,carrier
          ,state
          ,p.startdate
          ,p.asofdate
          ,p.calyrmo_end
          ,p.polyrmo_end
          ,p.resseg
          ,cast(p.earnedpremium as float) as earned_premiums
          ,cast(p.writtenpremium as float) as written_premiums
          ,case when p.earnedpremium > 0 then 1 else 0 end as dq_earned_premiums_check
          ,case 
                  when p.writtenpremium > 0 then 1
                  else 0
              end as dq_written_premiums_check
          FROM db_premiums_summary p


  - name: HOPremiumsSummary_DF
    sql: |
        SELECT DISTINCT
            aslob
          ,lob
          ,carrier
          ,state
          ,p.startdate
          ,p.asofdate
          ,p.calyrmo_end
          ,p.polyrmo_end
          ,p.resseg
          ,cast(p.earnedpremium as float) as earned_premiums
          ,cast(p.writtenpremium as float) as written_premiums
          ,case when p.earnedpremium > 0 then 1 else 0 end as dq_earned_premiums_check
          ,case 
                  when p.writtenpremium > 0 then 1
                  else 0
              end as dq_written_premiums_check
          FROM ho_premiums_summary p

  - name: WCPremiumsSummary_DF
    sql: |
        SELECT DISTINCT
            aslob
          ,lob
          ,carrier
          ,state
          ,p.startdate
          ,p.asofdate
          ,p.calyrmo_end
          ,p.polyrmo_end
          ,p.resseg
          ,cast(p.earnedpremium as float) as earned_premiums
          ,cast(p.writtenpremium as float) as written_premiums
          ,case when p.earnedpremium > 0 then 1 else 0 end as dq_earned_premiums_check
          ,case 
                  when p.writtenpremium > 0 then 1
                  else 0
              end as dq_written_premiums_check
          FROM wc_premiums_summary p

  - name: fact_premiums_monthly_snapshot
    sql: with cteCombined AS 
        (
          select * from BOPPremiumsSummary_DF
          union
          select * from CAPremiumsSummary_DF
          union
          select * from DBPremiumsSummary_DF
          union
          select * from HOPremiumsSummary_DF
          union
          select * from WCPremiumsSummary_DF
        )
        select distinct
            cast(null as int) as fact_premiums_monthly_snapshot_key
            ,coalesce(asl.aslob_key, -1) as aslob_key
            ,coalesce(lob.line_of_business_key, -1) as line_of_business_key
            ,coalesce(car.carrier_key, -1) as carrier_key
            ,coalesce(st.state_key, -1) as state_key
            ,current_timestamp() as snapshot_timestamp
            ,startdate
            ,asofdate
            ,calyrmo_end as cal_yr_mo_end
            ,polyrmo_end as policy_effective_date
            ,calyrmo_end as loss_date
            ,calyrmo_end as first_entered_date
            ,resseg as reserve_segment_code
            ,earned_premiums
            ,written_premiums
            ,dq_earned_premiums_check
            ,dq_written_premiums_check
            ,cast(null as timestamp) as row_effective_date
            ,cast(null as timestamp) as row_expiration_date
            ,cast(null as boolean) as is_current_flag
        from cteCombined c

        LEFT JOIN dim_line_of_business lob
            ON lob.line_of_business_code = c.lob and lob.dl_is_current_flag = 1
    
        LEFT JOIN dim_carrier car
            ON car.carrier_code = c.carrier and car.dl_is_current_flag = 1
    
        LEFT JOIN dim_state st
            ON st.state_code = c.state and st.dl_is_current_flag = 1
    
        LEFT JOIN dim_aslob asl
            ON asl.aslob_code = c.aslob and asl.dl_is_current_flag = 1

